// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: BattlePB.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoMsg {

  /// <summary>Holder for reflection information generated from BattlePB.proto</summary>
  public static partial class BattlePBReflection {

    #region Descriptor
    /// <summary>File descriptor for BattlePB.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BattlePBReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5CYXR0bGVQQi5wcm90bxIIUHJvdG9Nc2caDFJvb3RQQi5wcm90byKMAQoS",
            "QmF0dGxlVXNlcklucHV0QzJTEg8KB1JvbGVzSUQYASABKAUSDgoGUm9vbUlE",
            "GAIgASgFEgsKA2tleRgDIAEoBRInCg1Nb3VzZVBvc2l0aW9uGAQgASgLMhAu",
            "UHJvdG9Nc2cuVjNJbmZvEg8KB0xvY2tUYWcYBSABKAkSDgoGTG9ja0lEGAYg",
            "ASgFIj8KEkJhdHRsZVVzZXJJbnB1dFMyQxIpCgNDTUQYASABKAsyHC5Qcm90",
            "b01zZy5CYXR0bGVVc2VySW5wdXRDMlNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtoMsg.RootPBReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.BattleUserInputC2S), global::ProtoMsg.BattleUserInputC2S.Parser, new[]{ "RolesID", "RoomID", "Key", "MousePosition", "LockTag", "LockID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoMsg.BattleUserInputS2C), global::ProtoMsg.BattleUserInputS2C.Parser, new[]{ "CMD" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BattleUserInputC2S : pb::IMessage<BattleUserInputC2S> {
    private static readonly pb::MessageParser<BattleUserInputC2S> _parser = new pb::MessageParser<BattleUserInputC2S>(() => new BattleUserInputC2S());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleUserInputC2S> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.BattlePBReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleUserInputC2S() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleUserInputC2S(BattleUserInputC2S other) : this() {
      rolesID_ = other.rolesID_;
      roomID_ = other.roomID_;
      key_ = other.key_;
      mousePosition_ = other.mousePosition_ != null ? other.mousePosition_.Clone() : null;
      lockTag_ = other.lockTag_;
      lockID_ = other.lockID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleUserInputC2S Clone() {
      return new BattleUserInputC2S(this);
    }

    /// <summary>Field number for the "RolesID" field.</summary>
    public const int RolesIDFieldNumber = 1;
    private int rolesID_;
    /// <summary>
    ///角色ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RolesID {
      get { return rolesID_; }
      set {
        rolesID_ = value;
      }
    }

    /// <summary>Field number for the "RoomID" field.</summary>
    public const int RoomIDFieldNumber = 2;
    private int roomID_;
    /// <summary>
    ///房间ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RoomID {
      get { return roomID_; }
      set {
        roomID_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 3;
    private int key_;
    /// <summary>
    ///键码
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "MousePosition" field.</summary>
    public const int MousePositionFieldNumber = 4;
    private global::ProtoMsg.V3Info mousePosition_;
    /// <summary>
    ///鼠标位置
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.V3Info MousePosition {
      get { return mousePosition_; }
      set {
        mousePosition_ = value;
      }
    }

    /// <summary>Field number for the "LockTag" field.</summary>
    public const int LockTagFieldNumber = 5;
    private string lockTag_ = "";
    /// <summary>
    ///锁定的标签
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LockTag {
      get { return lockTag_; }
      set {
        lockTag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LockID" field.</summary>
    public const int LockIDFieldNumber = 6;
    private int lockID_;
    /// <summary>
    ///锁定的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LockID {
      get { return lockID_; }
      set {
        lockID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleUserInputC2S);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleUserInputC2S other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RolesID != other.RolesID) return false;
      if (RoomID != other.RoomID) return false;
      if (Key != other.Key) return false;
      if (!object.Equals(MousePosition, other.MousePosition)) return false;
      if (LockTag != other.LockTag) return false;
      if (LockID != other.LockID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RolesID != 0) hash ^= RolesID.GetHashCode();
      if (RoomID != 0) hash ^= RoomID.GetHashCode();
      if (Key != 0) hash ^= Key.GetHashCode();
      if (mousePosition_ != null) hash ^= MousePosition.GetHashCode();
      if (LockTag.Length != 0) hash ^= LockTag.GetHashCode();
      if (LockID != 0) hash ^= LockID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RolesID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RolesID);
      }
      if (RoomID != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RoomID);
      }
      if (Key != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Key);
      }
      if (mousePosition_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MousePosition);
      }
      if (LockTag.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LockTag);
      }
      if (LockID != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LockID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RolesID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RolesID);
      }
      if (RoomID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomID);
      }
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (mousePosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MousePosition);
      }
      if (LockTag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LockTag);
      }
      if (LockID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LockID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleUserInputC2S other) {
      if (other == null) {
        return;
      }
      if (other.RolesID != 0) {
        RolesID = other.RolesID;
      }
      if (other.RoomID != 0) {
        RoomID = other.RoomID;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      if (other.mousePosition_ != null) {
        if (mousePosition_ == null) {
          mousePosition_ = new global::ProtoMsg.V3Info();
        }
        MousePosition.MergeFrom(other.MousePosition);
      }
      if (other.LockTag.Length != 0) {
        LockTag = other.LockTag;
      }
      if (other.LockID != 0) {
        LockID = other.LockID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RolesID = input.ReadInt32();
            break;
          }
          case 16: {
            RoomID = input.ReadInt32();
            break;
          }
          case 24: {
            Key = input.ReadInt32();
            break;
          }
          case 34: {
            if (mousePosition_ == null) {
              mousePosition_ = new global::ProtoMsg.V3Info();
            }
            input.ReadMessage(mousePosition_);
            break;
          }
          case 42: {
            LockTag = input.ReadString();
            break;
          }
          case 48: {
            LockID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BattleUserInputS2C : pb::IMessage<BattleUserInputS2C> {
    private static readonly pb::MessageParser<BattleUserInputS2C> _parser = new pb::MessageParser<BattleUserInputS2C>(() => new BattleUserInputS2C());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleUserInputS2C> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoMsg.BattlePBReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleUserInputS2C() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleUserInputS2C(BattleUserInputS2C other) : this() {
      cMD_ = other.cMD_ != null ? other.cMD_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleUserInputS2C Clone() {
      return new BattleUserInputS2C(this);
    }

    /// <summary>Field number for the "CMD" field.</summary>
    public const int CMDFieldNumber = 1;
    private global::ProtoMsg.BattleUserInputC2S cMD_;
    /// <summary>
    ///用户的输入
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoMsg.BattleUserInputC2S CMD {
      get { return cMD_; }
      set {
        cMD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleUserInputS2C);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleUserInputS2C other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CMD, other.CMD)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (cMD_ != null) hash ^= CMD.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (cMD_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(CMD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (cMD_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CMD);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleUserInputS2C other) {
      if (other == null) {
        return;
      }
      if (other.cMD_ != null) {
        if (cMD_ == null) {
          cMD_ = new global::ProtoMsg.BattleUserInputC2S();
        }
        CMD.MergeFrom(other.CMD);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cMD_ == null) {
              cMD_ = new global::ProtoMsg.BattleUserInputC2S();
            }
            input.ReadMessage(cMD_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
